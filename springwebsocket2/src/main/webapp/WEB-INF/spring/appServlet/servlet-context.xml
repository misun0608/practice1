<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.springwebsocket2" />
	
	 <!-- WebSocket에 사용할 핸들러 객체 생성 -->
   <beans:bean id="socketHandler" class="com.spring.springwebsocket2.SocketHandler"  />
   
   <websocket:handlers><!-- mapping path는 내가 정의하기 나름! handler= 소켓핸들러 객체 이름을 써주면 된다 -->
      <websocket:mapping path="/broadcasting.do" handler="socketHandler" />
      <websocket:handshake-interceptors>
         <!-- Websocket에서 HttpSession 객체를 사용하고자 할 때 사용 -->
         <!-- HttpSession 객체에 있는 정보를 socketHandler에게 전달 -->
         <beans:bean class="com.spring.springwebsocket2.HandshakeInterceptor" />
      </websocket:handshake-interceptors>
   </websocket:handlers>
   
   <!-- 아래 주석내용도 같은 내용인데 클래스가 우리가 설정한 클래스가 아니라 spring에서 자체로 지원하는 클래스를 이용하는 방법 -->
   <!-- WebSocket에 사용할 핸들러 객체 맵핑 -->
   <!--  
   <websocket:handlers>
      <websocket:mapping path="/broadcasting" handler="socketHandler" />
   </websocket:handlers>
   -->
   <!--  
   <websocket:handlers>
      <websocket:mapping path="/broadcasting" handler="socketHandler" />
      <websocket:handshake-intercetors>
      	<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
      </websocket:handshake-intercetors>
   </websocket:handlers>
   -->
	
	
	
</beans:beans>
